{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91900\\\\OneDrive\\\\Desktop\\\\capstone project backup copy\\\\frontend\\\\src\\\\components\\\\Home.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Loader from '../ui/Loader/Loader';\nimport Shelf from './Shelf';\nimport * as BooksAPI from '../BooksAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Home extends React.Component {\n  componentDidMount() {\n    this.props.initializeHomeLoader();\n    BooksAPI.getAll().then(data => {\n      this.props.handleShelfs(data, \"home\");\n    });\n  }\n  render() {\n    const {\n      shelfs,\n      shelfOptionSelected,\n      selectingOption,\n      selectMenuDisabled,\n      homeLoader\n    } = this.props;\n    const allShelfs = Object.keys(this.props.shelfs).map(shelf => /*#__PURE__*/_jsxDEV(Shelf, {\n      id: shelf,\n      shelfs: shelfs,\n      shelfOptionSelected: shelfOptionSelected,\n      selectingOption: selectingOption,\n      selectMenuDisabled: selectMenuDisabled\n    }, shelf, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-screen\",\n      children: homeLoader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [selectMenuDisabled && /*#__PURE__*/_jsxDEV(Loader, {\n          className: \"select-shelf-loader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: allShelfs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"open-search\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/search\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Add a book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n}\nHome.propTypes = {\n  shelfs: PropTypes.object.isRequired,\n  initializeHomeLoader: PropTypes.func.isRequired,\n  handleShelfs: PropTypes.func.isRequired\n};\n\n// import React, { useEffect } from 'react';\n// import { useLocation} from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import Loader from '../ui/Loader/Loader';\n// import Shelf from './Shelf';\n// import * as BooksAPI from '../BooksAPI';\n\n// function Home(props) {\n//   const { shelfs, shelfOptionSelected, selectingOption, selectMenuDisabled, initializeHomeLoader, handleShelfs } = props;\n\n//   useEffect(() => {\n//     initializeHomeLoader();\n//     BooksAPI.getAll().then(data => {\n//       handleShelfs(data, \"home\");\n//     });\n//   }, [initializeHomeLoader, handleShelfs]);\n\n//   const location = useLocation();\n\n//   return (\n//     <div className=\"home-screen\">\n//       {props.homeLoader ? (\n//         <Loader />\n//       ) : (\n//         <>\n//           {selectMenuDisabled && <Loader className=\"select-shelf-loader\" />}\n//           <div>\n//             {Object.keys(shelfs).map(shelf => (\n//               <Shelf\n//                 key={shelf}\n//                 id={shelf}\n//                 shelfs={shelfs}\n//                 shelfOptionSelected={shelfOptionSelected}\n//                 selectingOption={selectingOption}\n//                 selectMenuDisabled={selectMenuDisabled}\n//               />\n//             ))}\n//           </div>\n//           <div className=\"open-search\">\n//             <Link to=\"/search\">\n//               <button>Add a book</button>\n//             </Link>\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// Home.propTypes = {\n//   shelfs: PropTypes.object.isRequired,\n//   initializeHomeLoader: PropTypes.func.isRequired,\n//   handleShelfs: PropTypes.func.isRequired,\n//   shelfOptionSelected: PropTypes.func.isRequired,\n//   selectingOption: PropTypes.func.isRequired,\n//   selectMenuDisabled: PropTypes.bool.isRequired,\n//   homeLoader: PropTypes.bool.isRequired,\n// };\n\n// export default Home;","map":{"version":3,"names":["React","Link","PropTypes","Loader","Shelf","BooksAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","Component","componentDidMount","props","initializeHomeLoader","getAll","then","data","handleShelfs","render","shelfs","shelfOptionSelected","selectingOption","selectMenuDisabled","homeLoader","allShelfs","Object","keys","map","shelf","id","fileName","_jsxFileName","lineNumber","columnNumber","className","children","to","propTypes","object","isRequired","func"],"sources":["C:/Users/91900/OneDrive/Desktop/capstone project backup copy/frontend/src/components/Home.js"],"sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../ui/Loader/Loader';\r\nimport Shelf from './Shelf';\r\nimport * as BooksAPI from '../BooksAPI';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeHomeLoader();\r\n        BooksAPI.getAll().then(data =>{\r\n            this.props.handleShelfs(data, \"home\");\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const {shelfs, shelfOptionSelected, selectingOption, selectMenuDisabled, homeLoader} = this.props;\r\n        const allShelfs = Object.keys(this.props.shelfs).map(shelf => (\r\n            <Shelf \r\n                key={shelf} \r\n                id={shelf} \r\n                shelfs={shelfs}\r\n                shelfOptionSelected={shelfOptionSelected}\r\n                selectingOption={selectingOption}\r\n                selectMenuDisabled={selectMenuDisabled}\r\n            />\r\n        ));\r\n\r\n        return (\r\n            <div className=\"home-screen\">\r\n          \r\n                {homeLoader ? <Loader /> : (\r\n                    <>\r\n                        {selectMenuDisabled && <Loader className=\"select-shelf-loader\"/>}\r\n                        <div>{allShelfs}</div>\r\n                        <div className=\"open-search\">\r\n                            <Link to=\"/search\"><button>Add a book</button></Link>\r\n                        </div>\r\n\r\n                    </>\r\n                )}\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    shelfs: PropTypes.object.isRequired,\r\n    initializeHomeLoader: PropTypes.func.isRequired,\r\n    handleShelfs: PropTypes.func.isRequired\r\n};\r\n\r\n// import React, { useEffect } from 'react';\r\n// import { useLocation} from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\n// import Loader from '../ui/Loader/Loader';\r\n// import Shelf from './Shelf';\r\n// import * as BooksAPI from '../BooksAPI';\r\n\r\n// function Home(props) {\r\n//   const { shelfs, shelfOptionSelected, selectingOption, selectMenuDisabled, initializeHomeLoader, handleShelfs } = props;\r\n\r\n//   useEffect(() => {\r\n//     initializeHomeLoader();\r\n//     BooksAPI.getAll().then(data => {\r\n//       handleShelfs(data, \"home\");\r\n//     });\r\n//   }, [initializeHomeLoader, handleShelfs]);\r\n\r\n//   const location = useLocation();\r\n\r\n//   return (\r\n//     <div className=\"home-screen\">\r\n//       {props.homeLoader ? (\r\n//         <Loader />\r\n//       ) : (\r\n//         <>\r\n//           {selectMenuDisabled && <Loader className=\"select-shelf-loader\" />}\r\n//           <div>\r\n//             {Object.keys(shelfs).map(shelf => (\r\n//               <Shelf\r\n//                 key={shelf}\r\n//                 id={shelf}\r\n//                 shelfs={shelfs}\r\n//                 shelfOptionSelected={shelfOptionSelected}\r\n//                 selectingOption={selectingOption}\r\n//                 selectMenuDisabled={selectMenuDisabled}\r\n//               />\r\n//             ))}\r\n//           </div>\r\n//           <div className=\"open-search\">\r\n//             <Link to=\"/search\">\r\n//               <button>Add a book</button>\r\n//             </Link>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// Home.propTypes = {\r\n//   shelfs: PropTypes.object.isRequired,\r\n//   initializeHomeLoader: PropTypes.func.isRequired,\r\n//   handleShelfs: PropTypes.func.isRequired,\r\n//   shelfOptionSelected: PropTypes.func.isRequired,\r\n//   selectingOption: PropTypes.func.isRequired,\r\n//   selectMenuDisabled: PropTypes.bool.isRequired,\r\n//   homeLoader: PropTypes.bool.isRequired,\r\n// };\r\n\r\n// export default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}