{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91900\\\\OneDrive\\\\Desktop\\\\capstone project backup copy\\\\frontend\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport BooksAPI from \"../BooksAPI\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Search from \"./\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BooksApp = () => {\n  const [homeLoader, setHomeLoader] = useState(false);\n  const [searchLoader, setSearchLoader] = useState(false);\n  const [selectMenuDisabled, setSelectMenuDisabled] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [shelfs, setShelfs] = useState({\n    currentlyReading: {\n      name: \"currentlyReading\",\n      uiName: \"Currently Reading\",\n      data: []\n    },\n    wantToRead: {\n      name: \"wantToRead\",\n      uiName: \"Want to Read\",\n      data: []\n    },\n    read: {\n      name: \"read\",\n      uiName: \"Read\",\n      data: []\n    }\n  });\n  useEffect(() => {\n    initializeHomeLoader();\n    BooksAPI.getAll().then(data => {\n      handleShelfs(data, \"home\");\n    });\n  }, []);\n  const selectingOption = () => {\n    setSelectMenuDisabled(true);\n  };\n  const initializeHomeLoader = () => {\n    setHomeLoader(true);\n  };\n  const initializeSearchLoader = () => {\n    setSearchLoader(true);\n  };\n  const setBooksForShelfs = books => {\n    let currentlyReadingShelfBooks = shelfs.currentlyReading.data,\n      wantToReadShelfBooks = shelfs.wantToRead.data,\n      readShelfBooks = shelfs.read.data;\n    books.map(book => {\n      if (currentlyReadingShelfBooks.some(shelfBook => shelfBook.id === book.id)) {\n        book[\"shelf\"] = \"currentlyReading\";\n      } else if (wantToReadShelfBooks.some(shelfBook => shelfBook.id === book.id)) {\n        book[\"shelf\"] = \"wantToRead\";\n      } else if (readShelfBooks.some(shelfBook => shelfBook.id === book.id)) {\n        book[\"shelf\"] = \"read\";\n      } else {\n        book[\"shelf\"] = \"none\";\n      }\n    });\n    setBooks(books);\n    setSearchLoader(false);\n  };\n  const resetBooks = () => {\n    setBooks([]);\n    setSearchLoader(false);\n  };\n  const handleShelfs = (fetchedBooks, screenName) => {\n    let clonedShelfs = {\n      ...shelfs\n    };\n    if (screenName === \"home\") {\n      setBooks(fetchedBooks);\n    } else {\n      setBooks([]);\n    }\n    fetchedBooks.forEach(book => {\n      var _clonedShelfs$bookShe;\n      const bookShelf = book.shelf;\n      if (((_clonedShelfs$bookShe = clonedShelfs[bookShelf]) === null || _clonedShelfs$bookShe === void 0 ? void 0 : _clonedShelfs$bookShe.name) === bookShelf) {\n        let clonedShelf = {\n          ...clonedShelfs[bookShelf]\n        };\n        clonedShelf.data.push(book);\n        clonedShelfs = {\n          ...clonedShelfs,\n          [bookShelf]: clonedShelf\n        };\n        setShelfs(clonedShelfs);\n      }\n    });\n    setHomeLoader(false);\n    setSearchLoader(false);\n  };\n  const shelfOptionSelected = (book, shelf) => {\n    let clonedShelfs = {\n      ...shelfs\n    };\n    if (book.shelf && book.shelf !== \"none\") {\n      let oldShelf = book.shelf;\n      let clonedOldShelf = {\n        ...clonedShelfs[oldShelf]\n      };\n      let filteredClonedOldShelfArray = clonedOldShelf.data.filter(shelfBook => book.id !== shelfBook.id);\n      clonedOldShelf.data = filteredClonedOldShelfArray;\n      book.shelf = shelf;\n      if (shelf !== \"none\") {\n        let clonedNewShelf = {\n          ...clonedShelfs[shelf]\n        };\n        clonedNewShelf.data.push(book);\n        clonedShelfs = {\n          ...clonedShelfs,\n          [oldShelf]: clonedOldShelf,\n          [shelf]: clonedNewShelf\n        };\n      } else {\n        clonedShelfs = {\n          ...clonedShelfs,\n          [oldShelf]: clonedOldShelf\n        };\n      }\n    }\n    let clonedBooks = [...books];\n    let requiredBook = clonedBooks.find(clonedBook => book.id === clonedBook.id);\n    if (requiredBook) {\n      requiredBook.shelf = shelf;\n    }\n    setShelfs(clonedShelfs);\n    setSelectMenuDisabled(false);\n    setBooks(clonedBooks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          shelfs: this.state.shelfs,\n          handleShelfs: this.handleShelfs,\n          initializeHomeLoader: this.initializeHomeLoader,\n          homeLoader: this.state.homeLoader,\n          shelfOptionSelected: this.shelfOptionSelected,\n          selectingOption: this.selectingOption,\n          selectMenuDisabled: this.state.selectMenuDisabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/search\",\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          books: this.state.books,\n          shelfOptionSelected: this.shelfOptionSelected,\n          selectingOption: this.selectingOption,\n          handleShelfs: this.handleShelfs,\n          selectMenuDisabled: this.state.selectMenuDisabled,\n          resetBooks: this.resetBooks,\n          setBooks: this.setBooks,\n          initializeSearchLoader: this.initializeSearchLoader,\n          searchLoader: this.state.searchLoader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 7\n  }, this);\n};\nexport default BooksApp;\n\n// import React, { Component } from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Switch,\n//   Redirect,\n// } from \"react-router-dom\";\n// import Search from \"./Search\";\n// import Home from \"./Home\";\n// import About from \"./About\";\n// import Header from \"./Header\";\n// import Footer from \"./Footer\";\n// import Login from \"./Login\";\n// import Signup from \"./Signup\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n// import \"./App.css\";\n// import \"@fortawesome/fontawesome-svg-core/styles.css\";\n// import axios from \"axios\";\n// import { history } from \"./history\";\n\n// class BooksApp extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     // check jwt token\n//     const token = localStorage.getItem(\"token\");\n//     this.state = {\n//       token,\n//       homeLoader: false,\n//       searchLoader: false,\n//       selectMenuDisabled: false,\n//       books: [],\n//       shelfs: {\n//         currentlyReading: {\n//           name: \"currentlyReading\",\n//           uiName: \"Currently Reading\",\n//           data: [],\n//         },\n//         wantToRead: {\n//           name: \"wantToRead\",\n//           uiName: \"Want to Read\",\n//           data: [],\n//         },\n//         read: {\n//           name: \"read\",\n//           uiName: \"Read\",\n//           data: [],\n//         },\n//       },\n//     };\n//   }\n\n//   componentDidMount() {\n//     const { token } = this.state;\n//     if (token) {\n//       this.setAuthToken(token);\n//     }\n//   }\n\n//   setAuthToken = (token) => {\n//     if (token) {\n//       axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n//     } else {\n//       delete axios.defaults.headers.common[\"Authorization\"];\n//     }\n//   };\n\n//   selectingOption = () => {\n//     this.setState({\n//       selectMenuDisabled: true,\n//     });\n//   };\n\n//   initializeHomeLoader = () => {\n//     this.setState({ homeLoader: true });\n//   };\n\n//   initializeSearchLoader = () => {\n//     this.setState({ searchLoader: true });\n//   };\n\n//   setBooks = (books) => {\n//     let currentlyReadingShelfBooks = this.state.shelfs.currentlyReading.data,\n//       wantToReadShelfBooks = this.state.shelfs.wantToRead.data,\n//       readShelfBooks = this.state.shelfs.read.data;\n//     books.map((book) => {\n//       if (\n//         currentlyReadingShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n//       ) {\n//         book[\"shelf\"] = \"currentlyReady\";\n//       } else if (\n//         wantToReadShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n//       ) {\n//         book[\"shelf\"] = \"wantToRead\";\n//       } else if (readShelfBooks.some((shelfBook) => shelfBook.id === book.id)) {\n//         book[\"shelf\"] = \"read\";\n//       } else {\n//         book[\"shelf\"] = \"none\";\n//       }\n//     });\n\n//     this.setState({\n//       books,\n//       searchLoader: false,\n//     });\n//   };\n\n//   resetBooks = () => {\n//     this.setState({\n//       books: [],\n//       searchLoader: false,\n//     });\n//   };\n\n//   handleShelfs = (fetchedBooks, screenName) => {\n//     let clonedShelfs = { ...this.state.shelfs };\n//     if (screenName === \"home\") {\n//       this.setState({\n//         books: fetchedBooks,\n//       });\n//     } else {\n//       this.setState({\n//         books: [],\n//       });\n//     }\n\n//     fetchedBooks.forEach((book) => {\n//       const bookShelf = book.shelf;\n//       if (this.state.shelfs[bookShelf]?.name === bookShelf) {\n//         let clonedShelf = { ...clonedShelfs[bookShelf] };\n//         clonedShelf.data.push(book);\n//         clonedShelfs[bookShelf] = clonedShelf;\n//         this.setState({\n//           shelfs: clonedShelfs,\n//         });\n//       }\n//     });\n\n//     this.setState({\n//       homeLoader: false,\n//       searchLoader: false,\n//     });\n//   };\n\n//   shelfOptionSelected = (book, shelf) => {\n//     let clonedShelfs = { ...this.state.shelfs };\n//     if (book.shelf && book.shelf !== \"none\") {\n//       let oldShelf = book.shelf;\n//       let clonedOldShelf = { ...clonedShelfs[oldShelf] };\n//       const filteredClonedOldShelfArray = clonedOldShelf.data.filter(\n//         (shelfBook) => book.id !== shelfBook.id\n//       );\n\n//       clonedOldShelf.data = filteredClonedOldShelfArray;\n\n//       book.shelf = shelf;\n\n//       if (shelf !== \"none\") {\n//         let clonedNewShelf = { ...clonedShelfs[shelf] };\n//         clonedNewShelf.data.push(book);\n\n//         clonedShelfs = {\n//           ...clonedShelfs,\n//           [oldShelf]: clonedOldShelf,\n//           [shelf]: clonedNewShelf,\n//         };\n//       } else {\n//         clonedShelfs[oldShelf] = clonedOldShelf;\n//       }\n//     }\n\n//     let clonedBooks = [...this.state.books];\n//     let requiredBook = clonedBooks.find(\n//       (clonedBook) => book.id === clonedBook.id\n//     );\n//     if (requiredBook) {\n//       requiredBook.shelf = shelf;\n//     }\n\n//     this.setState({\n//       shelfs: clonedShelfs,\n//       selectMenuDisabled: false,\n//       books: clonedBooks,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"app\">\n//         <Header />\n\n//         <Router history={history}>\n//           <Switch>\n//             <Route exact path=\"/about\">\n//               <About />\n//             </Route>\n//             <Route exact path=\"/signin\">\n//               <Login />\n//             </Route>\n//             <Route exact path=\"/register\">\n//               <Signup />\n//             </Route>\n\n//             <Route exact path=\"/\">\n//               <Home\n//               initializeHomeLoader={initializeHomeLoader}\n//                 shelfs={this.state.shelfs}\n//                 handleShelfs={this.handleShelfs}\n//                 books={this.state.books}\n//                 shelfOptionSelected={this.shelfOptionSelected}\n//               />\n//             </Route>\n\n//             <Route exact path=\"/search\">\n//               <Search\n//                 books={this.state.books}\n//                 shelfOptionSelected={this.shelfOptionSelected}\n//                 selectingOption={this.selectingOption}\n//                 handleShelfs={this.handleShelfs}\n//                 selectMenuDisabled={this.state.selectMenuDisabled}\n//                 resetBooks={this.resetBooks}\n//                 setBooks={this.setBooks}\n//                 initializeSearchLoader={this.initializeSearchLoader}\n//                 searchLoader={this.state.searchLoader}\n//               />\n//             </Route>\n\n//             <Redirect to=\"/\" />\n//           </Switch>\n//         </Router>\n\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }\n\n// export default BooksApp;","map":{"version":3,"names":["React","useState","useEffect","Route","Switch","Header","Footer","BooksAPI","Login","Signup","Home","About","Search","jsxDEV","_jsxDEV","BooksApp","homeLoader","setHomeLoader","searchLoader","setSearchLoader","selectMenuDisabled","setSelectMenuDisabled","books","setBooks","shelfs","setShelfs","currentlyReading","name","uiName","data","wantToRead","read","initializeHomeLoader","getAll","then","handleShelfs","selectingOption","initializeSearchLoader","setBooksForShelfs","currentlyReadingShelfBooks","wantToReadShelfBooks","readShelfBooks","map","book","some","shelfBook","id","resetBooks","fetchedBooks","screenName","clonedShelfs","forEach","_clonedShelfs$bookShe","bookShelf","shelf","clonedShelf","push","shelfOptionSelected","oldShelf","clonedOldShelf","filteredClonedOldShelfArray","filter","clonedNewShelf","clonedBooks","requiredBook","find","clonedBook","className","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","path","state"],"sources":["C:/Users/91900/OneDrive/Desktop/capstone project backup copy/frontend/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport BooksAPI from \"../BooksAPI\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Search from \"./\"\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport \"@fortawesome/fontawesome-svg-core/styles.css\";\n\nconst BooksApp = () => {\n  const [homeLoader, setHomeLoader] = useState(false);\n  const [searchLoader, setSearchLoader] = useState(false);\n  const [selectMenuDisabled, setSelectMenuDisabled] = useState(false);\n  const [books, setBooks] = useState([]);\n  const [shelfs, setShelfs] = useState({\n    currentlyReading: {\n      name: \"currentlyReading\",\n      uiName: \"Currently Reading\",\n      data: [],\n    },\n    wantToRead: {\n      name: \"wantToRead\",\n      uiName: \"Want to Read\",\n      data: [],\n    },\n    read: {\n      name: \"read\",\n      uiName: \"Read\",\n      data: [],\n    },\n  });\n\n  useEffect(() => {\n    initializeHomeLoader();\n    BooksAPI.getAll().then((data) => {\n      handleShelfs(data, \"home\");\n    });\n  }, []);\n\n  const selectingOption = () => {\n    setSelectMenuDisabled(true);\n  };\n\n  const initializeHomeLoader = () => {\n    setHomeLoader(true);\n  };\n\n  const initializeSearchLoader = () => {\n    setSearchLoader(true);\n  };\n\n  const setBooksForShelfs = (books) => {\n    let currentlyReadingShelfBooks = shelfs.currentlyReading.data,\n      wantToReadShelfBooks = shelfs.wantToRead.data,\n      readShelfBooks = shelfs.read.data;\n    books.map((book) => {\n      if (\n        currentlyReadingShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n      ) {\n        book[\"shelf\"] = \"currentlyReading\";\n      } else if (\n        wantToReadShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n      ) {\n        book[\"shelf\"] = \"wantToRead\";\n      } else if (readShelfBooks.some((shelfBook) => shelfBook.id === book.id)) {\n        book[\"shelf\"] = \"read\";\n      } else {\n        book[\"shelf\"] = \"none\";\n      }\n    });\n\n    setBooks(books);\n    setSearchLoader(false);\n  };\n\n  const resetBooks = () => {\n    setBooks([]);\n    setSearchLoader(false);\n  };\n\n  const handleShelfs = (fetchedBooks, screenName) => {\n    let clonedShelfs = { ...shelfs };\n    if (screenName === \"home\") {\n      setBooks(fetchedBooks);\n    } else {\n      setBooks([]);\n    }\n\n    fetchedBooks.forEach((book) => {\n      const bookShelf = book.shelf;\n      if (clonedShelfs[bookShelf]?.name === bookShelf) {\n        let clonedShelf = { ...clonedShelfs[bookShelf] };\n        clonedShelf.data.push(book);\n        clonedShelfs = {\n          ...clonedShelfs,\n          [bookShelf]: clonedShelf,\n        };\n        setShelfs(clonedShelfs);\n      }\n    });\n\n    setHomeLoader(false);\n    setSearchLoader(false);\n  };\n\n  const shelfOptionSelected = (book, shelf) => {\n    let clonedShelfs = { ...shelfs };\n    if (book.shelf && book.shelf !== \"none\") {\n      let oldShelf = book.shelf;\n      let clonedOldShelf = { ...clonedShelfs[oldShelf] };\n      let filteredClonedOldShelfArray = clonedOldShelf.data.filter(\n        (shelfBook) => book.id !== shelfBook.id\n      );\n\n      clonedOldShelf.data = filteredClonedOldShelfArray;\n\n      book.shelf = shelf;\n\n      if (shelf !== \"none\") {\n        let clonedNewShelf = { ...clonedShelfs[shelf] };\n        clonedNewShelf.data.push(book);\n\n        clonedShelfs = {\n          ...clonedShelfs,\n          [oldShelf]: clonedOldShelf,\n          [shelf]: clonedNewShelf,\n        };\n      } else {\n        clonedShelfs = {\n          ...clonedShelfs,\n          [oldShelf]: clonedOldShelf,\n        };\n      }\n    }\n\n    let clonedBooks = [...books];\n    let requiredBook = clonedBooks.find(\n      (clonedBook) => book.id === clonedBook.id\n    );\n    if (requiredBook) {\n      requiredBook.shelf = shelf;\n    }\n\n    setShelfs(clonedShelfs);\n    setSelectMenuDisabled(false);\n    setBooks(clonedBooks);\n  };\n\n  return (\n    \n      <div className=\"app\">\n        <Header />\n        \n        <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/signin\">\n            <Login />\n          </Route>\n          <Route exact path=\"/register\">\n            <Signup />\n          </Route>\n          <Route exact path=\"/\">\n            <Home\n              shelfs={this.state.shelfs}\n              handleShelfs={this.handleShelfs}\n              initializeHomeLoader={this.initializeHomeLoader}\n              homeLoader={this.state.homeLoader}\n              shelfOptionSelected={this.shelfOptionSelected}\n              selectingOption={this.selectingOption}\n              selectMenuDisabled={this.state.selectMenuDisabled}\n            />\n          </Route>\n\n          <Route exact path=\"/search\">\n            <Search\n              books={this.state.books}\n              shelfOptionSelected={this.shelfOptionSelected}\n              selectingOption={this.selectingOption}\n              handleShelfs={this.handleShelfs}\n              selectMenuDisabled={this.state.selectMenuDisabled}\n              resetBooks={this.resetBooks}\n              setBooks={this.setBooks}\n              initializeSearchLoader={this.initializeSearchLoader}\n              searchLoader={this.state.searchLoader}\n            />\n          </Route>\n          <Footer />\n        </Switch>\n        </div>\n    );\n  }\n\nexport default BooksApp;\n\n// import React, { Component } from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Switch,\n//   Redirect,\n// } from \"react-router-dom\";\n// import Search from \"./Search\";\n// import Home from \"./Home\";\n// import About from \"./About\";\n// import Header from \"./Header\";\n// import Footer from \"./Footer\";\n// import Login from \"./Login\";\n// import Signup from \"./Signup\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n// import \"./App.css\";\n// import \"@fortawesome/fontawesome-svg-core/styles.css\";\n// import axios from \"axios\";\n// import { history } from \"./history\";\n\n// class BooksApp extends Component {\n//   constructor(props) {\n//     super(props);\n\n//     // check jwt token\n//     const token = localStorage.getItem(\"token\");\n//     this.state = {\n//       token,\n//       homeLoader: false,\n//       searchLoader: false,\n//       selectMenuDisabled: false,\n//       books: [],\n//       shelfs: {\n//         currentlyReading: {\n//           name: \"currentlyReading\",\n//           uiName: \"Currently Reading\",\n//           data: [],\n//         },\n//         wantToRead: {\n//           name: \"wantToRead\",\n//           uiName: \"Want to Read\",\n//           data: [],\n//         },\n//         read: {\n//           name: \"read\",\n//           uiName: \"Read\",\n//           data: [],\n//         },\n//       },\n//     };\n//   }\n\n//   componentDidMount() {\n//     const { token } = this.state;\n//     if (token) {\n//       this.setAuthToken(token);\n//     }\n//   }\n\n//   setAuthToken = (token) => {\n//     if (token) {\n//       axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n//     } else {\n//       delete axios.defaults.headers.common[\"Authorization\"];\n//     }\n//   };\n\n//   selectingOption = () => {\n//     this.setState({\n//       selectMenuDisabled: true,\n//     });\n//   };\n\n//   initializeHomeLoader = () => {\n//     this.setState({ homeLoader: true });\n//   };\n\n//   initializeSearchLoader = () => {\n//     this.setState({ searchLoader: true });\n//   };\n\n//   setBooks = (books) => {\n//     let currentlyReadingShelfBooks = this.state.shelfs.currentlyReading.data,\n//       wantToReadShelfBooks = this.state.shelfs.wantToRead.data,\n//       readShelfBooks = this.state.shelfs.read.data;\n//     books.map((book) => {\n//       if (\n//         currentlyReadingShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n//       ) {\n//         book[\"shelf\"] = \"currentlyReady\";\n//       } else if (\n//         wantToReadShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n//       ) {\n//         book[\"shelf\"] = \"wantToRead\";\n//       } else if (readShelfBooks.some((shelfBook) => shelfBook.id === book.id)) {\n//         book[\"shelf\"] = \"read\";\n//       } else {\n//         book[\"shelf\"] = \"none\";\n//       }\n//     });\n\n//     this.setState({\n//       books,\n//       searchLoader: false,\n//     });\n//   };\n\n//   resetBooks = () => {\n//     this.setState({\n//       books: [],\n//       searchLoader: false,\n//     });\n//   };\n\n//   handleShelfs = (fetchedBooks, screenName) => {\n//     let clonedShelfs = { ...this.state.shelfs };\n//     if (screenName === \"home\") {\n//       this.setState({\n//         books: fetchedBooks,\n//       });\n//     } else {\n//       this.setState({\n//         books: [],\n//       });\n//     }\n\n//     fetchedBooks.forEach((book) => {\n//       const bookShelf = book.shelf;\n//       if (this.state.shelfs[bookShelf]?.name === bookShelf) {\n//         let clonedShelf = { ...clonedShelfs[bookShelf] };\n//         clonedShelf.data.push(book);\n//         clonedShelfs[bookShelf] = clonedShelf;\n//         this.setState({\n//           shelfs: clonedShelfs,\n//         });\n//       }\n//     });\n\n//     this.setState({\n//       homeLoader: false,\n//       searchLoader: false,\n//     });\n//   };\n\n//   shelfOptionSelected = (book, shelf) => {\n//     let clonedShelfs = { ...this.state.shelfs };\n//     if (book.shelf && book.shelf !== \"none\") {\n//       let oldShelf = book.shelf;\n//       let clonedOldShelf = { ...clonedShelfs[oldShelf] };\n//       const filteredClonedOldShelfArray = clonedOldShelf.data.filter(\n//         (shelfBook) => book.id !== shelfBook.id\n//       );\n\n//       clonedOldShelf.data = filteredClonedOldShelfArray;\n\n//       book.shelf = shelf;\n\n//       if (shelf !== \"none\") {\n//         let clonedNewShelf = { ...clonedShelfs[shelf] };\n//         clonedNewShelf.data.push(book);\n\n//         clonedShelfs = {\n//           ...clonedShelfs,\n//           [oldShelf]: clonedOldShelf,\n//           [shelf]: clonedNewShelf,\n//         };\n//       } else {\n//         clonedShelfs[oldShelf] = clonedOldShelf;\n//       }\n//     }\n\n//     let clonedBooks = [...this.state.books];\n//     let requiredBook = clonedBooks.find(\n//       (clonedBook) => book.id === clonedBook.id\n//     );\n//     if (requiredBook) {\n//       requiredBook.shelf = shelf;\n//     }\n\n//     this.setState({\n//       shelfs: clonedShelfs,\n//       selectMenuDisabled: false,\n//       books: clonedBooks,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"app\">\n//         <Header />\n\n//         <Router history={history}>\n//           <Switch>\n//             <Route exact path=\"/about\">\n//               <About />\n//             </Route>\n//             <Route exact path=\"/signin\">\n//               <Login />\n//             </Route>\n//             <Route exact path=\"/register\">\n//               <Signup />\n//             </Route>\n\n//             <Route exact path=\"/\">\n//               <Home\n//               initializeHomeLoader={initializeHomeLoader}\n//                 shelfs={this.state.shelfs}\n//                 handleShelfs={this.handleShelfs}\n//                 books={this.state.books}\n//                 shelfOptionSelected={this.shelfOptionSelected}\n//               />\n//             </Route>\n\n//             <Route exact path=\"/search\">\n//               <Search\n//                 books={this.state.books}\n//                 shelfOptionSelected={this.shelfOptionSelected}\n//                 selectingOption={this.selectingOption}\n//                 handleShelfs={this.handleShelfs}\n//                 selectMenuDisabled={this.state.selectMenuDisabled}\n//                 resetBooks={this.resetBooks}\n//                 setBooks={this.setBooks}\n//                 initializeSearchLoader={this.initializeSearchLoader}\n//                 searchLoader={this.state.searchLoader}\n//               />\n//             </Route>\n\n//             <Redirect to=\"/\" />\n//           </Switch>\n//         </Router>\n\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }\n\n// export default BooksApp;\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}