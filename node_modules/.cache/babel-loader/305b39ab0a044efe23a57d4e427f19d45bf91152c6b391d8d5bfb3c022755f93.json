{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91900\\\\OneDrive\\\\Desktop\\\\CAPSTONE PROJECT UPGRAD\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import {Link} from 'react-router-dom';\n// import PropTypes from 'prop-types';\n// import Loader from '../ui/Loader/Loader';\n// import Shelf from './Shelf';\n// import * as BooksAPI from '../BooksAPI';\n\n// export default class Home extends React.Component {\n\n//     componentDidMount() {\n//         this.props.initializeHomeLoader();\n//         BooksAPI.getAll().then(data =>{\n//             this.props.handleShelfs(data, \"home\");\n//         });\n//     }\n\n//     render() {\n//         const {shelfs, shelfOptionSelected, selectingOption, selectMenuDisabled, homeLoader} = this.props;\n//         const allShelfs = Object.keys(this.props.shelfs).map(shelf => (\n//             <Shelf \n//                 key={shelf} \n//                 id={shelf} \n//                 shelfs={shelfs}\n//                 shelfOptionSelected={shelfOptionSelected}\n//                 selectingOption={selectingOption}\n//                 selectMenuDisabled={selectMenuDisabled}\n//             />\n//         ));\n\n//         return (\n//             <div className=\"home-screen\">\n\n//                 {homeLoader ? <Loader /> : (\n//                     <>\n//                         {selectMenuDisabled && <Loader className=\"select-shelf-loader\"/>}\n//                         <div>{allShelfs}</div>\n//                         <div className=\"open-search\">\n//                             <Link to=\"/search\"><button>Add a book</button></Link>\n//                         </div>\n\n//                     </>\n//                 )}\n//             </div>\n//         )\n//     }\n// }\n\n// Home.propTypes = {\n//     shelfs: PropTypes.object.isRequired,\n//     initializeHomeLoader: PropTypes.func.isRequired,\n//     handleShelfs: PropTypes.func.isRequired\n// };\n\nimport React, { useEffect } from 'react';\nimport { useLocation, useNav } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Loader from '../ui/Loader/Loader';\nimport Shelf from './Shelf';\nimport * as BooksAPI from '../BooksAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home(props) {\n  _s();\n  const {\n    shelfs,\n    shelfOptionSelected,\n    selectingOption,\n    selectMenuDisabled,\n    initializeHomeLoader,\n    handleShelfs\n  } = props;\n  useEffect(() => {\n    initializeHomeLoader();\n    BooksAPI.getAll().then(data => {\n      handleShelfs(data, \"home\");\n    });\n  }, [initializeHomeLoader, handleShelfs]);\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-screen\",\n    children: props.homeLoader ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [selectMenuDisabled && /*#__PURE__*/_jsxDEV(Loader, {\n        className: \"select-shelf-loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: Object.keys(shelfs).map(shelf => /*#__PURE__*/_jsxDEV(Shelf, {\n          id: shelf,\n          shelfs: shelfs,\n          shelfOptionSelected: shelfOptionSelected,\n          selectingOption: selectingOption,\n          selectMenuDisabled: selectMenuDisabled\n        }, shelf, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"open-search\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/search\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Add a book\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"o1BGGE68B5NhzkgX/n1YzImCIJg=\", false, function () {\n  return [useLocation];\n});\n_c = Home;\nHome.propTypes = {\n  shelfs: PropTypes.object.isRequired,\n  initializeHomeLoader: PropTypes.func.isRequired,\n  handleShelfs: PropTypes.func.isRequired,\n  shelfOptionSelected: PropTypes.func.isRequired,\n  selectingOption: PropTypes.func.isRequired,\n  selectMenuDisabled: PropTypes.bool.isRequired,\n  homeLoader: PropTypes.bool.isRequired\n};\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useLocation","useNav","Link","PropTypes","Loader","Shelf","BooksAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","props","_s","shelfs","shelfOptionSelected","selectingOption","selectMenuDisabled","initializeHomeLoader","handleShelfs","getAll","then","data","location","className","children","homeLoader","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","shelf","id","to","_c","propTypes","object","isRequired","func","bool","$RefreshReg$"],"sources":["C:/Users/91900/OneDrive/Desktop/CAPSTONE PROJECT UPGRAD/frontend/src/components/Home.js"],"sourcesContent":["// import React from 'react';\r\n// import {Link} from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\n// import Loader from '../ui/Loader/Loader';\r\n// import Shelf from './Shelf';\r\n// import * as BooksAPI from '../BooksAPI';\r\n\r\n// export default class Home extends React.Component {\r\n\r\n//     componentDidMount() {\r\n//         this.props.initializeHomeLoader();\r\n//         BooksAPI.getAll().then(data =>{\r\n//             this.props.handleShelfs(data, \"home\");\r\n//         });\r\n//     }\r\n    \r\n//     render() {\r\n//         const {shelfs, shelfOptionSelected, selectingOption, selectMenuDisabled, homeLoader} = this.props;\r\n//         const allShelfs = Object.keys(this.props.shelfs).map(shelf => (\r\n//             <Shelf \r\n//                 key={shelf} \r\n//                 id={shelf} \r\n//                 shelfs={shelfs}\r\n//                 shelfOptionSelected={shelfOptionSelected}\r\n//                 selectingOption={selectingOption}\r\n//                 selectMenuDisabled={selectMenuDisabled}\r\n//             />\r\n//         ));\r\n\r\n//         return (\r\n//             <div className=\"home-screen\">\r\n          \r\n//                 {homeLoader ? <Loader /> : (\r\n//                     <>\r\n//                         {selectMenuDisabled && <Loader className=\"select-shelf-loader\"/>}\r\n//                         <div>{allShelfs}</div>\r\n//                         <div className=\"open-search\">\r\n//                             <Link to=\"/search\"><button>Add a book</button></Link>\r\n//                         </div>\r\n\r\n//                     </>\r\n//                 )}\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// Home.propTypes = {\r\n//     shelfs: PropTypes.object.isRequired,\r\n//     initializeHomeLoader: PropTypes.func.isRequired,\r\n//     handleShelfs: PropTypes.func.isRequired\r\n// };\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { useLocation, useNav } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Loader from '../ui/Loader/Loader';\r\nimport Shelf from './Shelf';\r\nimport * as BooksAPI from '../BooksAPI';\r\n\r\nfunction Home(props) {\r\n  const { shelfs, shelfOptionSelected, selectingOption, selectMenuDisabled, initializeHomeLoader, handleShelfs } = props;\r\n\r\n  useEffect(() => {\r\n    initializeHomeLoader();\r\n    BooksAPI.getAll().then(data => {\r\n      handleShelfs(data, \"home\");\r\n    });\r\n  }, [initializeHomeLoader, handleShelfs]);\r\n\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className=\"home-screen\">\r\n      {props.homeLoader ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {selectMenuDisabled && <Loader className=\"select-shelf-loader\" />}\r\n          <div>\r\n            {Object.keys(shelfs).map(shelf => (\r\n              <Shelf\r\n                key={shelf}\r\n                id={shelf}\r\n                shelfs={shelfs}\r\n                shelfOptionSelected={shelfOptionSelected}\r\n                selectingOption={selectingOption}\r\n                selectMenuDisabled={selectMenuDisabled}\r\n              />\r\n            ))}\r\n          </div>\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\">\r\n              <button>Add a book</button>\r\n            </Link>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  shelfs: PropTypes.object.isRequired,\r\n  initializeHomeLoader: PropTypes.func.isRequired,\r\n  handleShelfs: PropTypes.func.isRequired,\r\n  shelfOptionSelected: PropTypes.func.isRequired,\r\n  selectingOption: PropTypes.func.isRequired,\r\n  selectMenuDisabled: PropTypes.bool.isRequired,\r\n  homeLoader: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}