{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91900\\\\OneDrive\\\\Desktop\\\\CAPSTONE PROJECT UPGRAD\\\\frontend\\\\src\\\\components\\\\App.js\";\n// import React from \"react\";\n// import { BrowserRouter as Route, Switch } from \"react-router-dom\";\n// import Search from \"./Search\";\n// import Home from \"./Home\";\n// import About from \"./About\";\n// import Header from \"./Header\";\n// import Footer from \"./Footer\";\n// import \"./App.css\";\n// import \"@fortawesome/fontawesome-svg-core/styles.css\";\n// import Login from \"./Login\";\n// import Signup from \"./Signup\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n\n// class BooksApp extends React.Component {\n//   state = {\n//     homeLoader: false,\n//     searchLoader: false,\n//     selectMenuDisabled: false,\n//     books: [],\n//     shelfs: {\n//       currentlyReading: {\n//         name: \"currentlyReading\",\n//         uiName: \"Currently Reading\",\n//         data: [],\n//       },\n//       wantToRead: {\n//         name: \"wantToRead\",\n//         uiName: \"Want to Read\",\n//         data: [],\n//       },\n//       read: {\n//         name: \"read\",\n//         uiName: \"Read\",\n//         data: [],\n//       },\n//     },\n//   };\n\n//   selectingOption = () => {\n//     this.setState({\n//       selectMenuDisabled: true,\n//     });\n//   };\n\n//   initializeHomeLoader = () => {\n//     this.setState({ homeLoader: true });\n//   };\n\n//   initializeSearchLoader = () => {\n//     this.setState({ searchLoader: true });\n//   };\n\n//   setBooks = (books) => {\n//     let currentlyReadingShelfBooks = this.state.shelfs.currentlyReading.data,\n//       wantToReadShelfBooks = this.state.shelfs.wantToRead.data,\n//       readShelfBooks = this.state.shelfs.read.data;\n//     books.map((book) => {\n//       if (\n//         currentlyReadingShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n//       ) {\n//         book[\"shelf\"] = \"currentlyReady\";\n//       } else if (\n//         wantToReadShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n//       ) {\n//         book[\"shelf\"] = \"wantToRead\";\n//       } else if (readShelfBooks.some((shelfBook) => shelfBook.id === book.id)) {\n//         book[\"shelf\"] = \"read\";\n//       } else {\n//         book[\"shelf\"] = \"none\";\n//       }\n//     });\n\n//     this.setState({\n//       books,\n//       searchLoader: false,\n//     });\n//   };\n\n//   resetBooks = () => {\n//     this.setState({\n//       books: [],\n//       searchLoader: false,\n//     });\n//   };\n\n//   handleShelfs = (fetchedBooks, screenName) => {\n//     let clonedShelfs = this.state.shelfs;\n//     if (screenName === \"home\") {\n//       this.setState({\n//         books: fetchedBooks,\n//       });\n//     } else {\n//       this.setState({\n//         books: [],\n//       });\n//     }\n\n//     fetchedBooks.map((book) => {\n//       const bookShelf = book.shelf;\n//       if (this.state.shelfs[bookShelf].name === bookShelf) {\n//         let clonedShelf = clonedShelfs[bookShelf];\n//         clonedShelf.data.push(book);\n//         clonedShelfs = {\n//           ...clonedShelfs,\n//           [bookShelf]: clonedShelf,\n//         };\n//         this.setState({\n//           ...this.state,\n//           shelfs: clonedShelfs,\n//         });\n//       }\n//     });\n\n//     this.setState({\n//       homeLoader: false,\n//       searchLoader: false,\n//     });\n//   };\n\n//   shelfOptionSelected = (book, shelf) => {\n//     let clonedShelfs = this.state.shelfs;\n//     if (book.shelf && book.shelf !== \"none\") {\n//       let oldShelf = book.shelf,\n//         clonedOldShelf = clonedShelfs[oldShelf],\n//         filteredClonedOldShelfArray = clonedOldShelf.data.filter(\n//           (shelfBook) => book.id !== shelfBook.id\n//         );\n\n//       clonedOldShelf = {\n//         ...clonedOldShelf,\n//         data: filteredClonedOldShelfArray,\n//       };\n\n//       book.shelf = shelf;\n\n//       if (shelf !== \"none\") {\n//         let clonedNewShelf = clonedShelfs[shelf];\n//         clonedNewShelf.data.push(book);\n\n//         clonedShelfs = {\n//           ...clonedShelfs,\n//           [oldShelf]: clonedOldShelf,\n//           [shelf]: clonedNewShelf,\n//         };\n//       } else {\n//         clonedShelfs = {\n//           ...clonedShelfs,\n//           [oldShelf]: clonedOldShelf,\n//         };\n//       }\n//     }\n\n//     let clonedBooks = this.state.books;\n//     let requiredBook = clonedBooks.find(\n//       (clonedBook) => book.id === clonedBook.id\n//     );\n//     if (requiredBook) {\n//       requiredBook.shelf = shelf;\n//     }\n\n//     this.setState({\n//       ...this.state,\n//       shelfs: clonedShelfs,\n//       selectMenuDisabled: false,\n//       books: clonedBooks,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <BrowserRouter>\n//         <div className=\"app\">\n//           <Header />\n//           <Switch>\n//             <Route exact path=\"/\">\n//               <Home\n//                 shelfs={this.state.shelfs}\n//                 handleShelfs={this.handleShelfs}\n//                 initializeHomeLoader={this.initializeHomeLoader}\n//                 homeLoader={this.state.homeLoader}\n//                 shelfOptionSelected={this.shelfOptionSelected}\n//                 selectingOption={this.selectingOption}\n//                 selectMenuDisabled={this.state.selectMenuDisabled}\n//               />\n//             </Route>\n//             <Route exact path=\"/search\">\n//               <Search\n//                 books={this.state.books}\n//                 shelfOptionSelected={this.shelfOptionSelected}\n//                 selectingOption={this.selectingOption}\n//                 handleShelfs={this.handleShelfs}\n//                 selectMenuDisabled={this.state.selectMenuDisabled}\n//                 resetBooks={this.resetBooks}\n//                 setBooks={this.setBooks}\n//                 initializeSearchLoader={this.initializeSearchLoader}\n//                 searchLoader={this.state.searchLoader}\n//               />\n//             </Route>\n\n//             <Route exact path=\"/about\">\n//               <About />\n//             </Route>\n\n//             <Route exact path=\"/login\">\n//               <Login />\n//             </Route>\n\n//             <Route exact path=\"/signup\">\n//               <Signup />\n//             </Route>\n//           </Switch>\n//           <Footer />\n//         </div>\n//       </BrowserRouter>\n//     );\n//   }\n// }\n\n// export default BooksApp;\n\n// import './App.css'\nimport Home from \"./components/Home\";\nimport Login from \"./Login\";\nimport Signup from \"./components/Signup\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/home\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Home","Login","Signup","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/91900/OneDrive/Desktop/CAPSTONE PROJECT UPGRAD/frontend/src/components/App.js"],"sourcesContent":["// import React from \"react\";\n// import { BrowserRouter as Route, Switch } from \"react-router-dom\";\n// import Search from \"./Search\";\n// import Home from \"./Home\";\n// import About from \"./About\";\n// import Header from \"./Header\";\n// import Footer from \"./Footer\";\n// import \"./App.css\";\n// import \"@fortawesome/fontawesome-svg-core/styles.css\";\n// import Login from \"./Login\";\n// import Signup from \"./Signup\";\n// import \"bootstrap/dist/css/bootstrap.css\";\n\n// class BooksApp extends React.Component {\n//   state = {\n//     homeLoader: false,\n//     searchLoader: false,\n//     selectMenuDisabled: false,\n//     books: [],\n//     shelfs: {\n//       currentlyReading: {\n//         name: \"currentlyReading\",\n//         uiName: \"Currently Reading\",\n//         data: [],\n//       },\n//       wantToRead: {\n//         name: \"wantToRead\",\n//         uiName: \"Want to Read\",\n//         data: [],\n//       },\n//       read: {\n//         name: \"read\",\n//         uiName: \"Read\",\n//         data: [],\n//       },\n//     },\n//   };\n\n//   selectingOption = () => {\n//     this.setState({\n//       selectMenuDisabled: true,\n//     });\n//   };\n\n//   initializeHomeLoader = () => {\n//     this.setState({ homeLoader: true });\n//   };\n\n//   initializeSearchLoader = () => {\n//     this.setState({ searchLoader: true });\n//   };\n\n//   setBooks = (books) => {\n//     let currentlyReadingShelfBooks = this.state.shelfs.currentlyReading.data,\n//       wantToReadShelfBooks = this.state.shelfs.wantToRead.data,\n//       readShelfBooks = this.state.shelfs.read.data;\n//     books.map((book) => {\n//       if (\n//         currentlyReadingShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n//       ) {\n//         book[\"shelf\"] = \"currentlyReady\";\n//       } else if (\n//         wantToReadShelfBooks.some((shelfBook) => shelfBook.id === book.id)\n//       ) {\n//         book[\"shelf\"] = \"wantToRead\";\n//       } else if (readShelfBooks.some((shelfBook) => shelfBook.id === book.id)) {\n//         book[\"shelf\"] = \"read\";\n//       } else {\n//         book[\"shelf\"] = \"none\";\n//       }\n//     });\n\n//     this.setState({\n//       books,\n//       searchLoader: false,\n//     });\n//   };\n\n//   resetBooks = () => {\n//     this.setState({\n//       books: [],\n//       searchLoader: false,\n//     });\n//   };\n\n//   handleShelfs = (fetchedBooks, screenName) => {\n//     let clonedShelfs = this.state.shelfs;\n//     if (screenName === \"home\") {\n//       this.setState({\n//         books: fetchedBooks,\n//       });\n//     } else {\n//       this.setState({\n//         books: [],\n//       });\n//     }\n\n//     fetchedBooks.map((book) => {\n//       const bookShelf = book.shelf;\n//       if (this.state.shelfs[bookShelf].name === bookShelf) {\n//         let clonedShelf = clonedShelfs[bookShelf];\n//         clonedShelf.data.push(book);\n//         clonedShelfs = {\n//           ...clonedShelfs,\n//           [bookShelf]: clonedShelf,\n//         };\n//         this.setState({\n//           ...this.state,\n//           shelfs: clonedShelfs,\n//         });\n//       }\n//     });\n\n//     this.setState({\n//       homeLoader: false,\n//       searchLoader: false,\n//     });\n//   };\n\n//   shelfOptionSelected = (book, shelf) => {\n//     let clonedShelfs = this.state.shelfs;\n//     if (book.shelf && book.shelf !== \"none\") {\n//       let oldShelf = book.shelf,\n//         clonedOldShelf = clonedShelfs[oldShelf],\n//         filteredClonedOldShelfArray = clonedOldShelf.data.filter(\n//           (shelfBook) => book.id !== shelfBook.id\n//         );\n\n//       clonedOldShelf = {\n//         ...clonedOldShelf,\n//         data: filteredClonedOldShelfArray,\n//       };\n\n//       book.shelf = shelf;\n\n//       if (shelf !== \"none\") {\n//         let clonedNewShelf = clonedShelfs[shelf];\n//         clonedNewShelf.data.push(book);\n\n//         clonedShelfs = {\n//           ...clonedShelfs,\n//           [oldShelf]: clonedOldShelf,\n//           [shelf]: clonedNewShelf,\n//         };\n//       } else {\n//         clonedShelfs = {\n//           ...clonedShelfs,\n//           [oldShelf]: clonedOldShelf,\n//         };\n//       }\n//     }\n\n//     let clonedBooks = this.state.books;\n//     let requiredBook = clonedBooks.find(\n//       (clonedBook) => book.id === clonedBook.id\n//     );\n//     if (requiredBook) {\n//       requiredBook.shelf = shelf;\n//     }\n\n//     this.setState({\n//       ...this.state,\n//       shelfs: clonedShelfs,\n//       selectMenuDisabled: false,\n//       books: clonedBooks,\n//     });\n//   };\n\n//   render() {\n//     return (\n//       <BrowserRouter>\n//         <div className=\"app\">\n//           <Header />\n//           <Switch>\n//             <Route exact path=\"/\">\n//               <Home\n//                 shelfs={this.state.shelfs}\n//                 handleShelfs={this.handleShelfs}\n//                 initializeHomeLoader={this.initializeHomeLoader}\n//                 homeLoader={this.state.homeLoader}\n//                 shelfOptionSelected={this.shelfOptionSelected}\n//                 selectingOption={this.selectingOption}\n//                 selectMenuDisabled={this.state.selectMenuDisabled}\n//               />\n//             </Route>\n//             <Route exact path=\"/search\">\n//               <Search\n//                 books={this.state.books}\n//                 shelfOptionSelected={this.shelfOptionSelected}\n//                 selectingOption={this.selectingOption}\n//                 handleShelfs={this.handleShelfs}\n//                 selectMenuDisabled={this.state.selectMenuDisabled}\n//                 resetBooks={this.resetBooks}\n//                 setBooks={this.setBooks}\n//                 initializeSearchLoader={this.initializeSearchLoader}\n//                 searchLoader={this.state.searchLoader}\n//               />\n//             </Route>\n\n//             <Route exact path=\"/about\">\n//               <About />\n//             </Route>\n\n//             <Route exact path=\"/login\">\n//               <Login />\n//             </Route>\n\n//             <Route exact path=\"/signup\">\n//               <Signup />\n//             </Route>\n//           </Switch>\n//           <Footer />\n//         </div>\n//       </BrowserRouter>\n//     );\n//   }\n// }\n\n// export default BooksApp;\n\n// import './App.css'\nimport Home from \"./components/Home\"\nimport Login from \"./Login\";\nimport Signup from \"./components/Signup\"\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Login/>}/>\n          <Route path=\"/signup\" element={<Signup/>}/>\n          <Route path=\"/home\" element={<Home/>}/>\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAOA,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,qBAAqB;AACxC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1E,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAKE,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBH,OAAA,CAACJ,MAAM;MAAAO,QAAA,eACLH,OAAA,CAACH,MAAM;QAAAM,QAAA,gBACLH,OAAA,CAACF,KAAK;UAACM,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEL,OAAA,CAACP,KAAK;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACpCT,OAAA,CAACF,KAAK;UAACM,IAAI,EAAC,SAAS;UAACC,OAAO,eAAEL,OAAA,CAACN,MAAM;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC3CT,OAAA,CAACF,KAAK;UAACM,IAAI,EAAC,OAAO;UAACC,OAAO,eAAEL,OAAA,CAACR,IAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACC,EAAA,GAZQT,GAAG;AAcZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}