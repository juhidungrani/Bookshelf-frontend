{"ast":null,"code":"// const api = \"https://reactnd-books-api.udacity.com\"\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n};\n\n// export const get = (bookId) =>\n//   fetch(`${api}/books/${bookId}`, { headers })\n//     .then(res => res.json())\n//     .then(data => data.book)\n\n// export const getAll = () =>\n//   fetch(`${api}/books`, { headers })\n//     .then(res => res.json())\n//     .then(data => data.books)\n\n// export const update = (book, shelf) =>\n//   fetch(`${api}/books/${book.id}`, {\n//     method: 'PUT',\n//     headers: {\n//       ...headers,\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ shelf })\n//   }).then(res => res.json())\n\n// export const search = (query) =>\n//   fetch(`${api}/search`, {\n//     method: 'POST',\n//     headers: {\n//       ...headers,\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify({ query })\n//   }).then(res => res.json())\n//     .then(data => data.books)","map":{"version":3,"names":["token","localStorage","Math","random","toString","substr","headers"],"sources":["C:/Users/91900/OneDrive/Desktop/CAPSTONE PROJECT UPGRAD/frontend/src/BooksAPI.js"],"sourcesContent":["\r\n// const api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\n// export const get = (bookId) =>\r\n//   fetch(`${api}/books/${bookId}`, { headers })\r\n//     .then(res => res.json())\r\n//     .then(data => data.book)\r\n\r\n// export const getAll = () =>\r\n//   fetch(`${api}/books`, { headers })\r\n//     .then(res => res.json())\r\n//     .then(data => data.books)\r\n\r\n// export const update = (book, shelf) =>\r\n//   fetch(`${api}/books/${book.id}`, {\r\n//     method: 'PUT',\r\n//     headers: {\r\n//       ...headers,\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify({ shelf })\r\n//   }).then(res => res.json())\r\n\r\n// export const search = (query) =>\r\n//   fetch(`${api}/search`, {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       ...headers,\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify({ query })\r\n//   }).then(res => res.json())\r\n//     .then(data => data.books)\r\n"],"mappings":"AACA;;AAGA;AACA,IAAIA,KAAK,GAAGC,YAAY,CAACD,KAAK;AAC9B,IAAI,CAACA,KAAK,EACRA,KAAK,GAAGC,YAAY,CAACD,KAAK,GAAGE,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;AAEpE,MAAMC,OAAO,GAAG;EACd,QAAQ,EAAE,kBAAkB;EAC5B,eAAe,EAAEN;AACnB,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}