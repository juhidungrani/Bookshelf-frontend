{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91900\\\\OneDrive\\\\Desktop\\\\CAPSTONE PROJECT UPGRAD\\\\frontend\\\\src\\\\components\\\\BookStatus.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Search from \"./Search\";\nimport Home from \"./Home\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass BookStatus extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      homeLoader: false,\n      searchLoader: false,\n      selectMenuDisabled: false,\n      books: [],\n      shelfs: {\n        currentlyReading: {\n          name: \"currentlyReading\",\n          uiName: \"Currently Reading\",\n          data: []\n        },\n        wantToRead: {\n          name: \"wantToRead\",\n          uiName: \"Want to Read\",\n          data: []\n        },\n        read: {\n          name: \"read\",\n          uiName: \"Read\",\n          data: []\n        }\n      }\n    };\n    this.selectingOption = () => {\n      this.setState({\n        selectMenuDisabled: true\n      });\n    };\n    this.initializeLoader = loaderName => {\n      this.setState({\n        [loaderName]: true\n      });\n    };\n    this.setBooks = books => {\n      const {\n        currentlyReading,\n        wantToRead,\n        read\n      } = this.state.shelfs;\n      books.forEach(book => {\n        if (currentlyReading.data.some(shelfBook => shelfBook.id === book.id)) {\n          book.shelf = \"currentlyReading\";\n        } else if (wantToRead.data.some(shelfBook => shelfBook.id === book.id)) {\n          book.shelf = \"wantToRead\";\n        } else if (read.data.some(shelfBook => shelfBook.id === book.id)) {\n          book.shelf = \"read\";\n        } else {\n          book.shelf = \"none\";\n        }\n      });\n      this.setState({\n        books,\n        searchLoader: false\n      });\n    };\n    this.resetBooks = () => {\n      this.setState({\n        books: [],\n        searchLoader: false\n      });\n    };\n    this.handleShelfs = (fetchedBooks, screenName) => {\n      let clonedShelfs = {\n        ...this.state.shelfs\n      };\n      if (screenName === \"home\") {\n        this.setState({\n          books: fetchedBooks\n        });\n      } else {\n        this.setState({\n          books: []\n        });\n      }\n      fetchedBooks.forEach(book => {\n        var _clonedShelfs$bookShe;\n        const bookShelf = book.shelf;\n        if (((_clonedShelfs$bookShe = clonedShelfs[bookShelf]) === null || _clonedShelfs$bookShe === void 0 ? void 0 : _clonedShelfs$bookShe.name) === bookShelf) {\n          const clonedShelf = {\n            ...clonedShelfs[bookShelf]\n          };\n          clonedShelf.data.push(book);\n          clonedShelfs[bookShelf] = clonedShelf;\n        }\n      });\n      this.setState({\n        homeLoader: false,\n        searchLoader: false,\n        shelfs: clonedShelfs\n      });\n    };\n    this.shelfOptionSelected = (book, shelf) => {\n      let clonedShelfs = {\n        ...this.state.shelfs\n      };\n      if (book.shelf && book.shelf !== \"none\") {\n        const oldShelf = book.shelf;\n        let clonedOldShelf = clonedShelfs[oldShelf];\n        const filteredClonedOldShelfArray = clonedOldShelf.data.filter(shelfBook => book.id !== shelfBook.id);\n        clonedOldShelf = {\n          ...clonedOldShelf,\n          data: filteredClonedOldShelfArray\n        };\n        book.shelf = shelf;\n        if (shelf !== \"none\") {\n          let clonedNewShelf = clonedShelfs[shelf];\n          clonedNewShelf.data.push(book);\n          clonedShelfs = {\n            ...clonedShelfs,\n            [oldShelf]: clonedOldShelf,\n            [shelf]: clonedNewShelf\n          };\n        } else {\n          clonedShelfs = {\n            ...clonedShelfs,\n            [oldShelf]: clonedOldShelf\n          };\n        }\n      }\n      let clonedBooks = this.state.books;\n      let requiredBook = clonedBooks.find(clonedBook => book.id === clonedBook.id);\n      if (requiredBook) {\n        requiredBook.shelf = shelf;\n      }\n      this.setState({\n        shelfs: clonedShelfs,\n        selectMenuDisabled: false,\n        books: clonedBooks\n      });\n    };\n  }\n  render() {\n    const {\n      shelfs,\n      homeLoader,\n      selectMenuDisabled,\n      books,\n      searchLoader\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Home, {\n        shelfs: shelfs,\n        handleShelfs: this.handleShelfs,\n        initializeHomeLoader: () => this.initializeLoader(\"homeLoader\"),\n        homeLoader: homeLoader,\n        shelfOptionSelected: this.shelfOptionSelected,\n        selectingOption: this.selectingOption,\n        selectMenuDisabled: selectMenuDisabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        books: books,\n        shelfOptionSelected: this.shelfOptionSelected,\n        selectingOption: this.selectingOption,\n        handleShelfs: this.handleShelfs,\n        selectMenuDisabled: selectMenuDisabled,\n        resetBooks: this.resetBooks,\n        setBooks: this.setBooks,\n        initializeSearchLoader: () => this.initializeLoader(\"searchLoader\"),\n        searchLoader: searchLoader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default BookStatus;","map":{"version":3,"names":["React","Component","Search","Home","jsxDEV","_jsxDEV","BookStatus","constructor","args","state","homeLoader","searchLoader","selectMenuDisabled","books","shelfs","currentlyReading","name","uiName","data","wantToRead","read","selectingOption","setState","initializeLoader","loaderName","setBooks","forEach","book","some","shelfBook","id","shelf","resetBooks","handleShelfs","fetchedBooks","screenName","clonedShelfs","_clonedShelfs$bookShe","bookShelf","clonedShelf","push","shelfOptionSelected","oldShelf","clonedOldShelf","filteredClonedOldShelfArray","filter","clonedNewShelf","clonedBooks","requiredBook","find","clonedBook","render","className","children","initializeHomeLoader","fileName","_jsxFileName","lineNumber","columnNumber","initializeSearchLoader"],"sources":["C:/Users/91900/OneDrive/Desktop/CAPSTONE PROJECT UPGRAD/frontend/src/components/BookStatus.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Search from \"./Search\";\r\nimport Home from \"./Home\";\r\n\r\nclass BookStatus extends Component {\r\n  state = {\r\n    homeLoader: false,\r\n    searchLoader: false,\r\n    selectMenuDisabled: false,\r\n    books: [],\r\n    shelfs: {\r\n      currentlyReading: {\r\n        name: \"currentlyReading\",\r\n        uiName: \"Currently Reading\",\r\n        data: [],\r\n      },\r\n      wantToRead: {\r\n        name: \"wantToRead\",\r\n        uiName: \"Want to Read\",\r\n        data: [],\r\n      },\r\n      read: {\r\n        name: \"read\",\r\n        uiName: \"Read\",\r\n        data: [],\r\n      },\r\n    },\r\n  };\r\n\r\n  selectingOption = () => {\r\n    this.setState({\r\n      selectMenuDisabled: true,\r\n    });\r\n  };\r\n\r\n  initializeLoader = (loaderName) => {\r\n    this.setState({ [loaderName]: true });\r\n  };\r\n\r\n  setBooks = (books) => {\r\n    const { currentlyReading, wantToRead, read } = this.state.shelfs;\r\n\r\n    books.forEach((book) => {\r\n      if (currentlyReading.data.some((shelfBook) => shelfBook.id === book.id)) {\r\n        book.shelf = \"currentlyReading\";\r\n      } else if (wantToRead.data.some((shelfBook) => shelfBook.id === book.id)) {\r\n        book.shelf = \"wantToRead\";\r\n      } else if (read.data.some((shelfBook) => shelfBook.id === book.id)) {\r\n        book.shelf = \"read\";\r\n      } else {\r\n        book.shelf = \"none\";\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      books,\r\n      searchLoader: false,\r\n    });\r\n  };\r\n\r\n  resetBooks = () => {\r\n    this.setState({\r\n      books: [],\r\n      searchLoader: false,\r\n    });\r\n  };\r\n\r\n  handleShelfs = (fetchedBooks, screenName) => {\r\n    let clonedShelfs = { ...this.state.shelfs };\r\n\r\n    if (screenName === \"home\") {\r\n      this.setState({\r\n        books: fetchedBooks,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        books: [],\r\n      });\r\n    }\r\n\r\n    fetchedBooks.forEach((book) => {\r\n      const bookShelf = book.shelf;\r\n      if (clonedShelfs[bookShelf]?.name === bookShelf) {\r\n        const clonedShelf = { ...clonedShelfs[bookShelf] };\r\n        clonedShelf.data.push(book);\r\n        clonedShelfs[bookShelf] = clonedShelf;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      homeLoader: false,\r\n      searchLoader: false,\r\n      shelfs: clonedShelfs,\r\n    });\r\n  };\r\n\r\n  shelfOptionSelected = (book, shelf) => {\r\n    let clonedShelfs = { ...this.state.shelfs };\r\n\r\n    if (book.shelf && book.shelf !== \"none\") {\r\n      const oldShelf = book.shelf;\r\n      let clonedOldShelf = clonedShelfs[oldShelf];\r\n\r\n      const filteredClonedOldShelfArray = clonedOldShelf.data.filter(\r\n        (shelfBook) => book.id !== shelfBook.id\r\n      );\r\n\r\n      clonedOldShelf = {\r\n        ...clonedOldShelf,\r\n        data: filteredClonedOldShelfArray,\r\n      };\r\n\r\n      book.shelf = shelf;\r\n\r\n      if (shelf !== \"none\") {\r\n        let clonedNewShelf = clonedShelfs[shelf];\r\n        clonedNewShelf.data.push(book);\r\n\r\n        clonedShelfs = {\r\n          ...clonedShelfs,\r\n          [oldShelf]: clonedOldShelf,\r\n          [shelf]: clonedNewShelf,\r\n        };\r\n      } else {\r\n        clonedShelfs = {\r\n          ...clonedShelfs,\r\n          [oldShelf]: clonedOldShelf,\r\n        };\r\n      }\r\n    }\r\n\r\n    let clonedBooks = this.state.books;\r\n    let requiredBook = clonedBooks.find((clonedBook) => book.id === clonedBook.id);\r\n    if (requiredBook) {\r\n      requiredBook.shelf = shelf;\r\n    }\r\n\r\n    this.setState({\r\n      shelfs: clonedShelfs,\r\n      selectMenuDisabled: false,\r\n      books: clonedBooks,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { shelfs, homeLoader, selectMenuDisabled, books, searchLoader } = this.state;\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Home\r\n          shelfs={shelfs}\r\n          handleShelfs={this.handleShelfs}\r\n          initializeHomeLoader={() => this.initializeLoader(\"homeLoader\")}\r\n          homeLoader={homeLoader}\r\n          shelfOptionSelected={this.shelfOptionSelected}\r\n          selectingOption={this.selectingOption}\r\n          selectMenuDisabled={selectMenuDisabled}\r\n        />\r\n\r\n        <Search\r\n          books={books}\r\n          shelfOptionSelected={this.shelfOptionSelected}\r\n          selectingOption={this.selectingOption}\r\n          handleShelfs={this.handleShelfs}\r\n          selectMenuDisabled={selectMenuDisabled}\r\n          resetBooks={this.resetBooks}\r\n          setBooks={this.setBooks}\r\n          initializeSearchLoader={() => this.initializeLoader(\"searchLoader\")}\r\n          searchLoader={searchLoader}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookStatus;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}